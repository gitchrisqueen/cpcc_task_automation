[tool.poetry]
name = "cpcc-task-automation"
version = "0.1.0"
description = ""
authors = ["gitchrisqueen <christopher.queen@gmail.com>"]
readme = "README.md"
packages = [
    { include = "cqc_cpcc", from = "src" },
    { include = "cqc_streamlit_app", from = "src" },
]

[tool.poetry.dependencies]
python = ">=3.9,<3.9.7 || >3.9.7,<4.0"
os-env = "^0.3"
selenium = "^4.17.1"
webdriver-manager = "^4.0.1"
#google-drive = "^0.5.1"
typing-extensions = "^4.9.0"
bs4 = "^0.0.2"
pandas = "^2.2.0"
datetime = "^5.4"
dateparser = "^1.2.0"
#markdownify = "^0.11.6"
langchain = "^0.1"
langchain-community = "^0.0"
openai = "^1.10.0"
ordered-set = "^4.1.0"
langchain-openai = "^0.0"
chromadb = "^0.4.22"
protobuf = "^3"
python-docx = "^1.1.0"
#simplify_docx= { git = "https://github.com/gitchrisqueen/Simplify-Docx.git"}
chromedriver-autoinstaller = "^0.6.4"
pyvirtualdisplay = "^3.0"
streamlit = "^1.32.2"
textract = "^1.6.5"
mammoth = "^1.7.1"


[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
ruff = "^0.1.5"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
jupyter = "^1.0.0"
setuptools = "^67.6.1"
grandalf = "^0.8"


[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
# The only dependencies that should be added are
# dependencies used for running tests (e.g., pytest, freezegun, response).
# Any dependencies that do not meet that criteria will be removed.
pytest = "^7.3.0"
freezegun = "^1.2.2"
pytest-mock = "^3.10.0"
syrupy = "^4.0.2"
pytest-watcher = "^0.3.4"
pytest-asyncio = "^0.21.1"
grandalf = "^0.8"
pytest-profiling = "^1.7.0"


[tool.poetry.group.test_integration]
optional = true
dependencies = { }

[tool.coverage.run]
omit = [
    "tests/*",
]

[tool.ruff.lint]
select = [
    "E", # pycodestyle
    "F", # pyflakes
    "I", # isort
    "T201", # print
]


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
pythonpath = ["src"]
# --strict-markers will raise errors on unknown marks.
# https://docs.pytest.org/en/7.1.x/how-to/mark.html#raising-errors-on-unknown-marks
#
# https://docs.pytest.org/en/7.1.x/reference/reference.html
# --strict-config       any warnings encountered while parsing the `pytest`
#                       section of the configuration file raise errors.
#
# https://github.com/tophat/syrupy
# --snapshot-warn-unused    Prints a warning on unused snapshots rather than fail the test suite.
addopts = "--snapshot-warn-unused --strict-markers --strict-config --durations=5"
# Registering custom markers.
# https://docs.pytest.org/en/7.1.x/example/markers.html#registering-markers
markers = [
    "requires: mark tests as requiring a specific library",
    "asyncio: mark tests as requiring asyncio",
    "compile: mark placeholder test used to compile integration tests without running them",
]
asyncio_mode = "auto"
